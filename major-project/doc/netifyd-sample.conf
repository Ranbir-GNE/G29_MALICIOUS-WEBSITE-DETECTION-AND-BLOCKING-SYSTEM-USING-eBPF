# Netify Agent configuration
# Copyright (C) 2016-2024 eGloo Incorporated
#
# This is free software, licensed under the GNU General Public License v3.
#
# Read the netifyd.conf(5) man page for documentation.

[netifyd]
auto_flow_expiry = <yes/no>
auto_informatics = <yes/no>
flow_map_buckets = <buckets>
load_domains = <yes/no>
max_capture_length = <packet capture snap length>
max_detection_pkts = <number of packets to perform DPI on before taking a guess>
max_flows = <flows>
path_persistent_state = <persistent storage path>
path_pid_file = <pid file path>
path_shared_data = <shared data path>
path_uuid = <agent uuid path>
path_uuid_serial = <serial uuid path>
path_uuid_site = <site uuid path>
path_volatile_state = <volatile storage path>
soft_dissectors = <yes/no>
ssl_use_tlsv1 = <yes/no>
ssl_verify = <yes/no>
syn_scan_protection = <yes/no>
ttl_idle_flow = <idle flow TTL in seconds>
ttl_idle_tcp_flow = <idle TCP flow TTL in seconds>
update_interval = <update interval in seconds>
use_getifaddrs = <yes/no>
uuid = <agent uuid>
uuid_serial = <agent serial uuid>
uuid_site = <site uuid>

[capture-defaults]
capture_type = <default capture type: pcap, tpv3, nfqueue>
read_timeout = <capture timeout in milliseconds>

[capture-defaults-tpv3]
fanout_mode = <fanout mode: hash, lb, cpu, rollover, random>
fanout_flags = <fanout flags: defrag, rollover>
fanout_instances = <number of fanout instances>
rb_block_size = <ring buffer block size in bytes>
rb_frame_size = <ring buffer minimum frame size in bytes>
rb_blocks = <ring buffer block count>

[capture-interface-<if name>]
role = <interface role: LAN, WAN>
capture_type = <capture type: pcap, tpv3, nfqueue>
capture_filename = <offline capture file for pcap sources>
address[0] = <local address: IPv4/6 CIDR>
peer = <optional interface peer, ex: software interfaces, pppX>
filter = <BPF packet filter>
...
<capture type options, override defaults>

[capture-interface-nfq<queue ID>]
role = <interface role: LAN, WAN>
capture_type = <capture type: nfqueue>
address[0] = <local address: IPv4/6 CIDR>
filter = <BPF packet filter>
queue_instances = <number of instance threads, starting from queue ID>

[flow-hash-cache]
enable = <yes/no>
save = <persistent/volatile/disabled>
cache_size = <number of flow hashes to cache per capture source>

[dns-hint-cache]
enable = <yes/no>
partial_lookups = <yes/no>
save = <persistent/volatile/disabled>
cache_size = <number of hint records to cache>

[privacy-filter]
mac[0] = <MAC address to filter>
host[0] = <IPv4/6 address to filter>
regex_search[0] = <regular expression>
regex_replace[0] = <replacement text>
private_external_addresses = <yes/no>

[netify-api]
enable = <enable to periodically update application signatures and categories (false by default)>
update_tick = <number of seconds between API check-ins (30 seconds by default)>
update_interval = <number of seconds between API updates (1 day, 86400, by default)>
bootstrap_url = <API bootstrap URL>
tls_verify = <yes/no>
vendor = <optional two character vendor ID>

[protocols]
all=include
edonkey=exclude

[proc-<tag>]
plugin_library = <plugin library>
conf_filename = <configuration filename; optional for some plugin types>
sink_targets = <comma-delimited list of sink tag:channel pairs>

[sink-<tag>]
plugin_library = <plugin library>
conf_filename = <configuration filename; optional for some plugin types>

# vim: set ft=dosini :
